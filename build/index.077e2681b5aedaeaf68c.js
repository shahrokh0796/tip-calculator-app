"use strict";(self.webpackChunktip_calculator_app_main=self.webpackChunktip_calculator_app_main||[]).push([[57],{201:function(e,t,n){var o=n(385),c=n.n(o),a=new URL(n(697),n.b),s=new URL(n(766),n.b),r=new URL(n(380),n.b);c()(a),c()(s),c()(r),document.addEventListener("DOMContentLoaded",(function(){const e=document.querySelector("#total"),t=document.querySelector("#persons"),n=document.querySelectorAll(".percentage-option"),o=document.querySelector("#customPercentage"),c=document.querySelector(".billSectionTipPerPerson"),a=document.querySelector(".billSectionTotalTip"),s=document.getElementById("button"),r=document.querySelector(".error");n.forEach((function(l){l.addEventListener("click",(function(){""===t.value||0===t.value?(r.textContent="Can't be zero",t.style.border="1px solid red"):(t.style.border="",r.textContent=""),n.forEach((e=>{e.classList.remove("selected"),console.log(e),e.classList.add("darkcyan")})),l.classList.add("selected"),function(){const r=parseFloat(e.value),l=parseInt(t.value);let u;""!==o.value?u=parseFloat(o.value):n.forEach((e=>{e.classList.contains("selected")&&(u=parseFloat(e.dataset.percentage))})),s.removeAttribute("disabled"),s.classList.add("strongCyan");const d=r*u/100/l,i=r*u/100;c.textContent=d.toFixed(2),a.textContent=i.toFixed(2)}()}))})),s.addEventListener("click",(()=>{a.textContent="$0.00",c.textContent="$0.00",e.value="",t.value=""}))}))},385:function(e){e.exports=function(e,t){return t||(t={}),e?(e=String(e.__esModule?e.default:e),t.hash&&(e+=t.hash),t.maybeNeedQuotes&&/[\t\n\f\r "'=<>`]/.test(e)?'"'.concat(e,'"'):e):e}},697:function(e,t,n){e.exports=n.p+"images/736eae1ff09acfe04c50.png"},766:function(e,t,n){e.exports=n.p+"images/9f9be3534a9295a65957.svg"},380:function(e,t,n){e.exports=n.p+"images/65bfd20465dd1d2cb58c.svg"}},function(e){e(e.s=201)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,